% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/QuoteDynamics.R
\name{quoteDynOptim}
\alias{quoteDynOptim}
\title{Fast Kalman Filter and Smoother Maximum Likelihood Estimation}
\usage{
quoteDynOptim(
  start,
  X,
  tau,
  ident_mat,
  rel_xtol = 1e-08,
  rel_ftol = 1e-08,
  max_eval = 100000L,
  algorithm = "LN_NELDERMEAD",
  compute_se = TRUE,
  no_of_bootstraps = 100,
  length_of_bootstraps = NULL,
  seed = 21052025,
  hessian = TRUE,
  step_size = 1e-08,
  verbose = FALSE
)
}
\arguments{
\item{start}{Vector of starting values.}

\item{X}{Matrix of data.}

\item{tau}{Vector of parameter values.}

\item{ident_mat}{Selection matrix.}

\item{rel_xtol}{Relative parameter change tolerance.}

\item{rel_ftol}{Relative obj. func. tolerance.}

\item{max_eval}{Maximum number of obj. function evaluations.}

\item{algorithm}{Character string, the optimization algorithm to use.}

\item{compute_se}{Whether or not standard eroors should be computed}

\item{no_of_bootstraps}{Number of bootstrap repititions}

\item{length_of_bootstraps}{Length of each bootstrap block}

\item{seed}{Seed used for bootstrapping}

\item{hessian}{Whether to compute the hessian matrix.}

\item{step_size}{Step size for hessian computation.}

\item{verbose}{Whether to print verbose output.}
}
\value{
A list containing the minimum value found, estimated parameters, and optionally the hessian matrix.
}
\description{
This function provides a fast implementation of the Kalman Filter and Smoother
Maximum Likelihood Estimation using the NLopt optimization library.
}
\examples{
start <- c(1, 1)
data <- matrix(rnorm(100), ncol = 10)
tau <- runif(10)
ident_mat <- matrix(round(runif(100 * 10, -0.5, 1.5), 0), 100, 10)
result <- NLoptKFS(start, data, tau, ident_mat)
}
